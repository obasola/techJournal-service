/*
 * Created on 2 Jul 2016 ( Time 10:09:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.techjournal.domain.SourceCode;
import com.kumasi.techjournal.domain.jpa.SourceCodeEntity;
import com.kumasi.techjournal.domain.jpa.SourceTypeEntity;
import com.kumasi.techjournal.domain.jpa.TechNoteEntity;
import com.kumasi.techjournal.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class SourceCodeServiceMapperTest {

	private SourceCodeServiceMapper sourceCodeServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		sourceCodeServiceMapper = new SourceCodeServiceMapper();
		sourceCodeServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'SourceCodeEntity' to 'SourceCode'
	 * @param sourceCodeEntity
	 */
	@Test
	public void testMapSourceCodeEntityToSourceCode() {
		// Given
		SourceCodeEntity sourceCodeEntity = new SourceCodeEntity();
		sourceCodeEntity.setSourceName(mockValues.nextString(65));
		sourceCodeEntity.setComment(mockValues.nextString(16777215));
		sourceCodeEntity.setDatePlaced(mockValues.nextDate());
		sourceCodeEntity.setDateModified(mockValues.nextDate());
		sourceCodeEntity.setSourceType(new SourceTypeEntity());
		sourceCodeEntity.getSourceType().setId(mockValues.nextInteger());
		sourceCodeEntity.setTechNote(new TechNoteEntity());
		sourceCodeEntity.getTechNote().setId(mockValues.nextInteger());
		
		// When
		SourceCode sourceCode = sourceCodeServiceMapper.mapSourceCodeEntityToSourceCode(sourceCodeEntity);
		
		// Then
		assertEquals(sourceCodeEntity.getSourceName(), sourceCode.getSourceName());
		assertEquals(sourceCodeEntity.getComment(), sourceCode.getComment());
		assertEquals(sourceCodeEntity.getDatePlaced(), sourceCode.getDatePlaced());
		assertEquals(sourceCodeEntity.getDateModified(), sourceCode.getDateModified());
		assertEquals(sourceCodeEntity.getSourceType().getId(), sourceCode.getSourceTypeId());
		assertEquals(sourceCodeEntity.getTechNote().getId(), sourceCode.getTechNoteId());
	}
	
	/**
	 * Test : Mapping from 'SourceCode' to 'SourceCodeEntity'
	 */
	@Test
	public void testMapSourceCodeToSourceCodeEntity() {
		// Given
		SourceCode sourceCode = new SourceCode();
		sourceCode.setSourceName(mockValues.nextString(65));
		sourceCode.setComment(mockValues.nextString(16777215));
		sourceCode.setDatePlaced(mockValues.nextDate());
		sourceCode.setDateModified(mockValues.nextDate());
		sourceCode.setSourceTypeId(mockValues.nextInteger());
		sourceCode.setTechNoteId(mockValues.nextInteger());

		SourceCodeEntity sourceCodeEntity = new SourceCodeEntity();
		
		// When
		sourceCodeServiceMapper.mapSourceCodeToSourceCodeEntity(sourceCode, sourceCodeEntity);
		
		// Then
		assertEquals(sourceCode.getSourceName(), sourceCodeEntity.getSourceName());
		assertEquals(sourceCode.getComment(), sourceCodeEntity.getComment());
		assertEquals(sourceCode.getDatePlaced(), sourceCodeEntity.getDatePlaced());
		assertEquals(sourceCode.getDateModified(), sourceCodeEntity.getDateModified());
		assertEquals(sourceCode.getSourceTypeId(), sourceCodeEntity.getSourceType().getId());
		assertEquals(sourceCode.getTechNoteId(), sourceCodeEntity.getTechNote().getId());
	}

}