/*
 * Created on 4 Jul 2016 ( Time 10:15:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.techjournal.domain.TechNote;
import com.kumasi.techjournal.business.service.TechNoteService;
import com.kumasi.techjournal.web.listitem.TechNoteListItem;

/**
 * Spring MVC controller for 'TechNote' management.
 */
@Controller
public class TechNoteRestController {

	@Resource
	private TechNoteService techNoteService;
	
	@RequestMapping( value="/items/techNote",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TechNoteListItem> findAllAsListItems() {
		List<TechNote> list = techNoteService.findAll();
		List<TechNoteListItem> items = new LinkedList<TechNoteListItem>();
		for ( TechNote techNote : list ) {
			items.add(new TechNoteListItem( techNote ) );
		}
		return items;
	}
	
	@RequestMapping( value="/techNote",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TechNote> findAll() {
		return techNoteService.findAll();
	}

	@RequestMapping( value="/techNote/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TechNote findOne(@PathVariable("id") Integer id) {
		return techNoteService.findById(id);
	}
	
	@RequestMapping( value="/techNote",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TechNote create(@RequestBody TechNote techNote) {
		return techNoteService.create(techNote);
	}

	@RequestMapping( value="/techNote/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TechNote update(@PathVariable("id") Integer id, @RequestBody TechNote techNote) {
		return techNoteService.update(techNote);
	}

	@RequestMapping( value="/techNote/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		techNoteService.delete(id);
	}
	
}
