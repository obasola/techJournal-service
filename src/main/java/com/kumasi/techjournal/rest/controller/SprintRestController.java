/*
 * Created on 4 Jul 2016 ( Time 10:15:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.techjournal.domain.Sprint;
import com.kumasi.techjournal.business.service.SprintService;
import com.kumasi.techjournal.web.listitem.SprintListItem;

/**
 * Spring MVC controller for 'Sprint' management.
 */
@Controller
public class SprintRestController {

	@Resource
	private SprintService sprintService;
	
	@RequestMapping( value="/items/sprint",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<SprintListItem> findAllAsListItems() {
		List<Sprint> list = sprintService.findAll();
		List<SprintListItem> items = new LinkedList<SprintListItem>();
		for ( Sprint sprint : list ) {
			items.add(new SprintListItem( sprint ) );
		}
		return items;
	}
	
	@RequestMapping( value="/sprint",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Sprint> findAll() {
		return sprintService.findAll();
	}

	@RequestMapping( value="/sprint/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Sprint findOne(@PathVariable("id") Integer id) {
		return sprintService.findById(id);
	}
	
	@RequestMapping( value="/sprint",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Sprint create(@RequestBody Sprint sprint) {
		return sprintService.create(sprint);
	}

	@RequestMapping( value="/sprint/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Sprint update(@PathVariable("id") Integer id, @RequestBody Sprint sprint) {
		return sprintService.update(sprint);
	}

	@RequestMapping( value="/sprint/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		sprintService.delete(id);
	}
	
}
