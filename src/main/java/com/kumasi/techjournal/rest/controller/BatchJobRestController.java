/*
 * Created on 1 Jul 2016 ( Time 19:35:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.techjournal.domain.BatchJob;
import com.kumasi.techjournal.business.service.BatchJobService;
import com.kumasi.techjournal.web.listitem.BatchJobListItem;

/**
 * Spring MVC controller for 'BatchJob' management.
 */
@Controller
public class BatchJobRestController {

	@Resource
	private BatchJobService batchJobService;
	
	@RequestMapping( value="/items/batchJob",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BatchJobListItem> findAllAsListItems() {
		List<BatchJob> list = batchJobService.findAll();
		List<BatchJobListItem> items = new LinkedList<BatchJobListItem>();
		for ( BatchJob batchJob : list ) {
			items.add(new BatchJobListItem( batchJob ) );
		}
		return items;
	}
	
	@RequestMapping( value="/batchJob",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BatchJob> findAll() {
		return batchJobService.findAll();
	}

	@RequestMapping( value="/batchJob/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BatchJob findOne(@PathVariable("id") Integer id) {
		return batchJobService.findById(id);
	}
	
	@RequestMapping( value="/batchJob",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BatchJob create(@RequestBody BatchJob batchJob) {
		return batchJobService.create(batchJob);
	}

	@RequestMapping( value="/batchJob/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BatchJob update(@PathVariable("id") Integer id, @RequestBody BatchJob batchJob) {
		return batchJobService.update(batchJob);
	}

	@RequestMapping( value="/batchJob/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		batchJobService.delete(id);
	}
	
}
