/*
 * Created on 4 Jul 2016 ( Time 10:15:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.techjournal.domain.Application;
import com.kumasi.techjournal.business.service.ApplicationService;
import com.kumasi.techjournal.web.listitem.ApplicationListItem;

/**
 * Spring MVC controller for 'Application' management.
 */
@Controller
public class ApplicationRestController {

	@Resource
	private ApplicationService applicationService;
	
	@RequestMapping( value="/items/application",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ApplicationListItem> findAllAsListItems() {
		List<Application> list = applicationService.findAll();
		List<ApplicationListItem> items = new LinkedList<ApplicationListItem>();
		for ( Application application : list ) {
			items.add(new ApplicationListItem( application ) );
		}
		return items;
	}
	
	@RequestMapping( value="/application",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Application> findAll() {
		return applicationService.findAll();
	}

	@RequestMapping( value="/application/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Application findOne(@PathVariable("id") Integer id) {
		return applicationService.findById(id);
	}
	
	@RequestMapping( value="/application",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Application create(@RequestBody Application application) {
		return applicationService.create(application);
	}

	@RequestMapping( value="/application/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Application update(@PathVariable("id") Integer id, @RequestBody Application application) {
		return applicationService.update(application);
	}

	@RequestMapping( value="/application/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		applicationService.delete(id);
	}
	
}
