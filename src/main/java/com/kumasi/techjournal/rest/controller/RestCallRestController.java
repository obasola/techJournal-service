/*
 * Created on 1 Jul 2016 ( Time 19:35:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.techjournal.domain.RestCall;
import com.kumasi.techjournal.business.service.RestCallService;
import com.kumasi.techjournal.web.listitem.RestCallListItem;

/**
 * Spring MVC controller for 'RestCall' management.
 */
@Controller
public class RestCallRestController {

	@Resource
	private RestCallService restCallService;
	
	@RequestMapping( value="/items/restCall",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<RestCallListItem> findAllAsListItems() {
		List<RestCall> list = restCallService.findAll();
		List<RestCallListItem> items = new LinkedList<RestCallListItem>();
		for ( RestCall restCall : list ) {
			items.add(new RestCallListItem( restCall ) );
		}
		return items;
	}
	
	@RequestMapping( value="/restCall",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<RestCall> findAll() {
		return restCallService.findAll();
	}

	@RequestMapping( value="/restCall/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public RestCall findOne(@PathVariable("id") Integer id) {
		return restCallService.findById(id);
	}
	
	@RequestMapping( value="/restCall",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public RestCall create(@RequestBody RestCall restCall) {
		return restCallService.create(restCall);
	}

	@RequestMapping( value="/restCall/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public RestCall update(@PathVariable("id") Integer id, @RequestBody RestCall restCall) {
		return restCallService.update(restCall);
	}

	@RequestMapping( value="/restCall/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		restCallService.delete(id);
	}
	
}
