/*
 * Created on 1 Jul 2016 ( Time 19:35:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.techjournal.domain.ReleaseNote;
import com.kumasi.techjournal.business.service.ReleaseNoteService;
import com.kumasi.techjournal.web.listitem.ReleaseNoteListItem;

/**
 * Spring MVC controller for 'ReleaseNote' management.
 */
@Controller
public class ReleaseNoteRestController {

	@Resource
	private ReleaseNoteService releaseNoteService;
	
	@RequestMapping( value="/items/releaseNote",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ReleaseNoteListItem> findAllAsListItems() {
		List<ReleaseNote> list = releaseNoteService.findAll();
		List<ReleaseNoteListItem> items = new LinkedList<ReleaseNoteListItem>();
		for ( ReleaseNote releaseNote : list ) {
			items.add(new ReleaseNoteListItem( releaseNote ) );
		}
		return items;
	}
	
	@RequestMapping( value="/releaseNote",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ReleaseNote> findAll() {
		return releaseNoteService.findAll();
	}

	@RequestMapping( value="/releaseNote/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ReleaseNote findOne(@PathVariable("id") Integer id) {
		return releaseNoteService.findById(id);
	}
	
	@RequestMapping( value="/releaseNote",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ReleaseNote create(@RequestBody ReleaseNote releaseNote) {
		return releaseNoteService.create(releaseNote);
	}

	@RequestMapping( value="/releaseNote/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ReleaseNote update(@PathVariable("id") Integer id, @RequestBody ReleaseNote releaseNote) {
		return releaseNoteService.update(releaseNote);
	}

	@RequestMapping( value="/releaseNote/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		releaseNoteService.delete(id);
	}
	
}
