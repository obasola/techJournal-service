/*
 * Created on 1 Jul 2016 ( Time 19:35:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.techjournal.domain.SourceCode;
import com.kumasi.techjournal.business.service.SourceCodeService;
import com.kumasi.techjournal.web.listitem.SourceCodeListItem;

/**
 * Spring MVC controller for 'SourceCode' management.
 */
@Controller
public class SourceCodeRestController {

	@Resource
	private SourceCodeService sourceCodeService;
	
	@RequestMapping( value="/items/sourceCode",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<SourceCodeListItem> findAllAsListItems() {
		List<SourceCode> list = sourceCodeService.findAll();
		List<SourceCodeListItem> items = new LinkedList<SourceCodeListItem>();
		for ( SourceCode sourceCode : list ) {
			items.add(new SourceCodeListItem( sourceCode ) );
		}
		return items;
	}
	
	@RequestMapping( value="/sourceCode",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<SourceCode> findAll() {
		return sourceCodeService.findAll();
	}

	@RequestMapping( value="/sourceCode/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public SourceCode findOne(@PathVariable("id") Integer id) {
		return sourceCodeService.findById(id);
	}
	
	@RequestMapping( value="/sourceCode",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public SourceCode create(@RequestBody SourceCode sourceCode) {
		return sourceCodeService.create(sourceCode);
	}

	@RequestMapping( value="/sourceCode/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public SourceCode update(@PathVariable("id") Integer id, @RequestBody SourceCode sourceCode) {
		return sourceCodeService.update(sourceCode);
	}

	@RequestMapping( value="/sourceCode/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		sourceCodeService.delete(id);
	}
	
}
