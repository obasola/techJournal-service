/*
 * Created on 2 Jul 2016 ( Time 10:09:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.kumasi.techjournal.domain.SourceType;
import com.kumasi.techjournal.domain.jpa.SourceTypeEntity;
import java.util.List;
import com.kumasi.techjournal.business.service.SourceTypeService;
import com.kumasi.techjournal.business.service.mapping.SourceTypeServiceMapper;
import com.kumasi.techjournal.persistence.PersistenceServiceProvider;
import com.kumasi.techjournal.persistence.services.SourceTypePersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of SourceTypeService
 */
@Component
public class SourceTypeServiceImpl implements SourceTypeService {

	private SourceTypePersistence sourceTypePersistence;

	@Resource
	private SourceTypeServiceMapper sourceTypeServiceMapper;
	
	public SourceTypeServiceImpl() {
		sourceTypePersistence = PersistenceServiceProvider.getService(SourceTypePersistence.class);
	}
		
	@Override
	public SourceType findById(Integer id) {
		SourceTypeEntity entity = sourceTypePersistence.load(id);
		return sourceTypeServiceMapper.mapSourceTypeEntityToSourceType(entity);
	}

	@Override
	public List<SourceType> findAll() {
		List<SourceTypeEntity> entities = sourceTypePersistence.loadAll();
		List<SourceType> beans = new ArrayList<SourceType>();
		for(SourceTypeEntity entity : entities) {
			beans.add(sourceTypeServiceMapper.mapSourceTypeEntityToSourceType(entity));
		}
		return beans;
	}

	@Override
	public SourceType save(SourceType sourceType) {
		return update(sourceType) ;
	}

	@Override
	public SourceType create(SourceType sourceType) {
		if(sourceType.getId() != null && sourceTypePersistence.load(sourceType.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		SourceTypeEntity sourceTypeEntity = new SourceTypeEntity();
		sourceTypeServiceMapper.mapSourceTypeToSourceTypeEntity(sourceType, sourceTypeEntity);
		SourceTypeEntity sourceTypeEntitySaved = sourceTypePersistence.save(sourceTypeEntity);
		return sourceTypeServiceMapper.mapSourceTypeEntityToSourceType(sourceTypeEntitySaved);
	}

	@Override
	public SourceType update(SourceType sourceType) {
		SourceTypeEntity sourceTypeEntity = sourceTypePersistence.load(sourceType.getId());
		sourceTypeServiceMapper.mapSourceTypeToSourceTypeEntity(sourceType, sourceTypeEntity);
		SourceTypeEntity sourceTypeEntitySaved = sourceTypePersistence.save(sourceTypeEntity);
		return sourceTypeServiceMapper.mapSourceTypeEntityToSourceType(sourceTypeEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		sourceTypePersistence.delete(id);
	}

	public SourceTypePersistence getSourceTypePersistence() {
		return sourceTypePersistence;
	}

	public void setSourceTypePersistence(SourceTypePersistence sourceTypePersistence) {
		this.sourceTypePersistence = sourceTypePersistence;
	}

	public SourceTypeServiceMapper getSourceTypeServiceMapper() {
		return sourceTypeServiceMapper;
	}

	public void setSourceTypeServiceMapper(SourceTypeServiceMapper sourceTypeServiceMapper) {
		this.sourceTypeServiceMapper = sourceTypeServiceMapper;
	}

}
