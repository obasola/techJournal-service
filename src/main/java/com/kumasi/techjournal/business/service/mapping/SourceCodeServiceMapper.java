/*
 * Created on 2 Jul 2016 ( Time 10:09:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.techjournal.domain.SourceCode;
import com.kumasi.techjournal.domain.jpa.SourceCodeEntity;
import com.kumasi.techjournal.domain.jpa.SourceTypeEntity;
import com.kumasi.techjournal.domain.jpa.TechNoteEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class SourceCodeServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public SourceCodeServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'SourceCodeEntity' to 'SourceCode'
	 * @param sourceCodeEntity
	 */
	public SourceCode mapSourceCodeEntityToSourceCode(SourceCodeEntity sourceCodeEntity) {
		if(sourceCodeEntity == null) {
			return null;
		}

		//--- Generic mapping 
		SourceCode sourceCode = map(sourceCodeEntity, SourceCode.class);

		//--- Link mapping ( link to SourceType )
		if(sourceCodeEntity.getSourceType() != null) {
			sourceCode.setSourceTypeId(sourceCodeEntity.getSourceType().getId());
		}
		//--- Link mapping ( link to TechNote )
		if(sourceCodeEntity.getTechNote() != null) {
			sourceCode.setTechNoteId(sourceCodeEntity.getTechNote().getId());
		}
		return sourceCode;
	}
	
	/**
	 * Mapping from 'SourceCode' to 'SourceCodeEntity'
	 * @param sourceCode
	 * @param sourceCodeEntity
	 */
	public void mapSourceCodeToSourceCodeEntity(SourceCode sourceCode, SourceCodeEntity sourceCodeEntity) {
		if(sourceCode == null) {
			return;
		}

		//--- Generic mapping 
		map(sourceCode, sourceCodeEntity);

		//--- Link mapping ( link : sourceCode )
		if( hasLinkToSourceType(sourceCode) ) {
			SourceTypeEntity sourceType1 = new SourceTypeEntity();
			sourceType1.setId( sourceCode.getSourceTypeId() );
			sourceCodeEntity.setSourceType( sourceType1 );
		} else {
			sourceCodeEntity.setSourceType( null );
		}

		//--- Link mapping ( link : sourceCode )
		if( hasLinkToTechNote(sourceCode) ) {
			TechNoteEntity techNote2 = new TechNoteEntity();
			techNote2.setId( sourceCode.getTechNoteId() );
			sourceCodeEntity.setTechNote( techNote2 );
		} else {
			sourceCodeEntity.setTechNote( null );
		}

	}
	
	/**
	 * Verify that SourceType id is valid.
	 * @param SourceType SourceType
	 * @return boolean
	 */
	private boolean hasLinkToSourceType(SourceCode sourceCode) {
		if(sourceCode.getSourceTypeId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that TechNote id is valid.
	 * @param TechNote TechNote
	 * @return boolean
	 */
	private boolean hasLinkToTechNote(SourceCode sourceCode) {
		if(sourceCode.getTechNoteId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}