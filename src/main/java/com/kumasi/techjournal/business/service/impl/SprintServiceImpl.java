/*
 * Created on 4 Jul 2016 ( Time 10:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.kumasi.techjournal.domain.Sprint;
import com.kumasi.techjournal.domain.jpa.SprintEntity;
import java.util.Date;
import java.util.List;
import com.kumasi.techjournal.business.service.SprintService;
import com.kumasi.techjournal.business.service.mapping.SprintServiceMapper;
import com.kumasi.techjournal.persistence.PersistenceServiceProvider;
import com.kumasi.techjournal.persistence.services.SprintPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of SprintService
 */
@Component
public class SprintServiceImpl implements SprintService {

	private SprintPersistence sprintPersistence;

	@Resource
	private SprintServiceMapper sprintServiceMapper;
	
	public SprintServiceImpl() {
		sprintPersistence = PersistenceServiceProvider.getService(SprintPersistence.class);
	}
		
	@Override
	public Sprint findById(Integer id) {
		SprintEntity entity = sprintPersistence.load(id);
		return sprintServiceMapper.mapSprintEntityToSprint(entity);
	}

	@Override
	public List<Sprint> findAll() {
		List<SprintEntity> entities = sprintPersistence.loadAll();
		List<Sprint> beans = new ArrayList<Sprint>();
		for(SprintEntity entity : entities) {
			beans.add(sprintServiceMapper.mapSprintEntityToSprint(entity));
		}
		return beans;
	}

	@Override
	public Sprint save(Sprint sprint) {
		return update(sprint) ;
	}

	@Override
	public Sprint create(Sprint sprint) {
		if(sprint.getId() != null && sprintPersistence.load(sprint.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		SprintEntity sprintEntity = new SprintEntity();
		sprintServiceMapper.mapSprintToSprintEntity(sprint, sprintEntity);
		SprintEntity sprintEntitySaved = sprintPersistence.save(sprintEntity);
		return sprintServiceMapper.mapSprintEntityToSprint(sprintEntitySaved);
	}

	@Override
	public Sprint update(Sprint sprint) {
		SprintEntity sprintEntity = sprintPersistence.load(sprint.getId());
		sprintServiceMapper.mapSprintToSprintEntity(sprint, sprintEntity);
		SprintEntity sprintEntitySaved = sprintPersistence.save(sprintEntity);
		return sprintServiceMapper.mapSprintEntityToSprint(sprintEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		sprintPersistence.delete(id);
	}

	public SprintPersistence getSprintPersistence() {
		return sprintPersistence;
	}

	public void setSprintPersistence(SprintPersistence sprintPersistence) {
		this.sprintPersistence = sprintPersistence;
	}

	public SprintServiceMapper getSprintServiceMapper() {
		return sprintServiceMapper;
	}

	public void setSprintServiceMapper(SprintServiceMapper sprintServiceMapper) {
		this.sprintServiceMapper = sprintServiceMapper;
	}

}
