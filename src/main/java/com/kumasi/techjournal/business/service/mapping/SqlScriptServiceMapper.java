/*
 * Created on 2 Jul 2016 ( Time 10:09:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.techjournal.domain.SqlScript;
import com.kumasi.techjournal.domain.jpa.SqlScriptEntity;
import com.kumasi.techjournal.domain.jpa.ReleaseNoteEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class SqlScriptServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public SqlScriptServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'SqlScriptEntity' to 'SqlScript'
	 * @param sqlScriptEntity
	 */
	public SqlScript mapSqlScriptEntityToSqlScript(SqlScriptEntity sqlScriptEntity) {
		if(sqlScriptEntity == null) {
			return null;
		}

		//--- Generic mapping 
		SqlScript sqlScript = map(sqlScriptEntity, SqlScript.class);

		//--- Link mapping ( link to ReleaseNote )
		if(sqlScriptEntity.getReleaseNote() != null) {
			sqlScript.setReleaseNoteId(sqlScriptEntity.getReleaseNote().getId());
		}
		return sqlScript;
	}
	
	/**
	 * Mapping from 'SqlScript' to 'SqlScriptEntity'
	 * @param sqlScript
	 * @param sqlScriptEntity
	 */
	public void mapSqlScriptToSqlScriptEntity(SqlScript sqlScript, SqlScriptEntity sqlScriptEntity) {
		if(sqlScript == null) {
			return;
		}

		//--- Generic mapping 
		map(sqlScript, sqlScriptEntity);

		//--- Link mapping ( link : sqlScript )
		if( hasLinkToReleaseNote(sqlScript) ) {
			ReleaseNoteEntity releaseNote1 = new ReleaseNoteEntity();
			releaseNote1.setId( sqlScript.getReleaseNoteId() );
			sqlScriptEntity.setReleaseNote( releaseNote1 );
		} else {
			sqlScriptEntity.setReleaseNote( null );
		}

	}
	
	/**
	 * Verify that ReleaseNote id is valid.
	 * @param ReleaseNote ReleaseNote
	 * @return boolean
	 */
	private boolean hasLinkToReleaseNote(SqlScript sqlScript) {
		if(sqlScript.getReleaseNoteId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}