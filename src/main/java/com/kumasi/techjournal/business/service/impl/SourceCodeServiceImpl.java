/*
 * Created on 2 Jul 2016 ( Time 10:09:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.techjournal.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.kumasi.techjournal.domain.SourceCode;
import com.kumasi.techjournal.domain.jpa.SourceCodeEntity;
import java.util.Date;
import com.kumasi.techjournal.business.service.SourceCodeService;
import com.kumasi.techjournal.business.service.mapping.SourceCodeServiceMapper;
import com.kumasi.techjournal.persistence.PersistenceServiceProvider;
import com.kumasi.techjournal.persistence.services.SourceCodePersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of SourceCodeService
 */
@Component
public class SourceCodeServiceImpl implements SourceCodeService {

	private SourceCodePersistence sourceCodePersistence;

	@Resource
	private SourceCodeServiceMapper sourceCodeServiceMapper;
	
	public SourceCodeServiceImpl() {
		sourceCodePersistence = PersistenceServiceProvider.getService(SourceCodePersistence.class);
	}
		
	@Override
	public SourceCode findById(Integer id) {
		SourceCodeEntity entity = sourceCodePersistence.load(id);
		return sourceCodeServiceMapper.mapSourceCodeEntityToSourceCode(entity);
	}

	@Override
	public List<SourceCode> findAll() {
		List<SourceCodeEntity> entities = sourceCodePersistence.loadAll();
		List<SourceCode> beans = new ArrayList<SourceCode>();
		for(SourceCodeEntity entity : entities) {
			beans.add(sourceCodeServiceMapper.mapSourceCodeEntityToSourceCode(entity));
		}
		return beans;
	}

	@Override
	public SourceCode save(SourceCode sourceCode) {
		return update(sourceCode) ;
	}

	@Override
	public SourceCode create(SourceCode sourceCode) {
		if(sourceCode.getId() != null && sourceCodePersistence.load(sourceCode.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		SourceCodeEntity sourceCodeEntity = new SourceCodeEntity();
		sourceCodeServiceMapper.mapSourceCodeToSourceCodeEntity(sourceCode, sourceCodeEntity);
		SourceCodeEntity sourceCodeEntitySaved = sourceCodePersistence.save(sourceCodeEntity);
		return sourceCodeServiceMapper.mapSourceCodeEntityToSourceCode(sourceCodeEntitySaved);
	}

	@Override
	public SourceCode update(SourceCode sourceCode) {
		SourceCodeEntity sourceCodeEntity = sourceCodePersistence.load(sourceCode.getId());
		sourceCodeServiceMapper.mapSourceCodeToSourceCodeEntity(sourceCode, sourceCodeEntity);
		SourceCodeEntity sourceCodeEntitySaved = sourceCodePersistence.save(sourceCodeEntity);
		return sourceCodeServiceMapper.mapSourceCodeEntityToSourceCode(sourceCodeEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		sourceCodePersistence.delete(id);
	}

	public SourceCodePersistence getSourceCodePersistence() {
		return sourceCodePersistence;
	}

	public void setSourceCodePersistence(SourceCodePersistence sourceCodePersistence) {
		this.sourceCodePersistence = sourceCodePersistence;
	}

	public SourceCodeServiceMapper getSourceCodeServiceMapper() {
		return sourceCodeServiceMapper;
	}

	public void setSourceCodeServiceMapper(SourceCodeServiceMapper sourceCodeServiceMapper) {
		this.sourceCodeServiceMapper = sourceCodeServiceMapper;
	}

}
