/*
 * Created on 4 Jul 2016 ( Time 10:14:03 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.kumasi.techjournal.domain.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "Sprint"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="Sprint", catalog="techJournal" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="SprintEntity.countAll", query="SELECT COUNT(x) FROM SprintEntity x" )
} )
public class SprintEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", nullable=false, length=45)
    private String     name         ;

    @Column(name="comment", length=255)
    private String     comment      ;

    @Temporal(TemporalType.DATE)
    @Column(name="start_date")
    private Date       startDate    ;

    @Temporal(TemporalType.DATE)
    @Column(name="end_date")
    private Date       endDate      ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_placed")
    private Date       datePlaced   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_modified")
    private Date       dateModified ;

	// "applicationId" (column "application_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="application_id", referencedColumnName="id")
    private ApplicationEntity application ;

    @OneToMany(mappedBy="sprint2", targetEntity=TechNoteEntity.class)
    private List<TechNoteEntity> listOfTechNote;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public SprintEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : comment ( TINYTEXT ) 
    public void setComment( String comment ) {
        this.comment = comment;
    }
    public String getComment() {
        return this.comment;
    }

    //--- DATABASE MAPPING : start_date ( DATE ) 
    public void setStartDate( Date startDate ) {
        this.startDate = startDate;
    }
    public Date getStartDate() {
        return this.startDate;
    }

    //--- DATABASE MAPPING : end_date ( DATE ) 
    public void setEndDate( Date endDate ) {
        this.endDate = endDate;
    }
    public Date getEndDate() {
        return this.endDate;
    }

    //--- DATABASE MAPPING : date_placed ( DATETIME ) 
    public void setDatePlaced( Date datePlaced ) {
        this.datePlaced = datePlaced;
    }
    public Date getDatePlaced() {
        return this.datePlaced;
    }

    //--- DATABASE MAPPING : date_modified ( DATETIME ) 
    public void setDateModified( Date dateModified ) {
        this.dateModified = dateModified;
    }
    public Date getDateModified() {
        return this.dateModified;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setApplication( ApplicationEntity application ) {
        this.application = application;
    }
    public ApplicationEntity getApplication() {
        return this.application;
    }

    public void setListOfTechNote( List<TechNoteEntity> listOfTechNote ) {
        this.listOfTechNote = listOfTechNote;
    }
    public List<TechNoteEntity> getListOfTechNote() {
        return this.listOfTechNote;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(comment);
        sb.append("|");
        sb.append(startDate);
        sb.append("|");
        sb.append(endDate);
        sb.append("|");
        sb.append(datePlaced);
        sb.append("|");
        sb.append(dateModified);
        return sb.toString(); 
    } 

}
